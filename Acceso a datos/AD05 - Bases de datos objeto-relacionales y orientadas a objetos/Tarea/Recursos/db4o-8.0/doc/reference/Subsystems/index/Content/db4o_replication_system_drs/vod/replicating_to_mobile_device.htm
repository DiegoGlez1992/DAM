<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="2" MadCap:lastHeight="120" MadCap:lastWidth="624" MadCap:disableMasterStylesheet="true" MadCap:tocPath="Replication With VOD" MadCap:InPreviewMode="false" MadCap:RuntimeFileType="Topic" MadCap:TargetType="WebHelp" MadCap:PathToHelpSystem="../../../" MadCap:HelpSystemFileName="index.xml" MadCap:SearchType="Stem">
    <head><title>Replicating to a Mobile Device</title>
        <link href="../../SkinSupport/MadCap.css" rel="stylesheet" />
        <link href="../../Resources/Stylesheets/OnlineStyle.css" rel="stylesheet" />
        <script src="../../SkinSupport/MadCapAll.js">
        </script>
    </head>
    <body>
        <p class="MCWebHelpFramesetLink" style="display: none;"><a href="../../../index_CSH.html#db4o_replication_system_drs/vod/replicating_to_mobile_device.htm" style="">Open topic with navigation</a>
        </p>
        <div class="MCBreadcrumbsBox"><span class="MCBreadcrumbsPrefix">You are here: </span><a class="MCBreadcrumbsLink" href="../vod_replication.htm">Replication With VOD</a><span class="MCBreadcrumbsDivider"> &gt; </span><span class="MCBreadcrumbs">The Workaround</span>
        </div>
        <script type="text/javascript">/*<![CDATA[*/
			document.write("<a href=\"" + location.href +"\">");
			document.write("Direct Link");
			document.write('</a>');/*]]>*/</script>
        <h1>Replicating to a Mobile Device</h1>
        <p>To replicate against <span class="MCTextPopup"><a href="javascript:void(0);" class="MCTextPopupSpot" onclick="FMCTextPopup( event, this ); return false;">VOD<img style="border: none;margin-left: 5px;" src="../../SkinSupport/ExpandingClosed.gif" MadCap:altsrc="../../SkinSupport/ExpandingOpen.gif" class="MCExpandingIcon" onload="if ( typeof( FMCPreloadImage ) == 'function' ) { FMCPreloadImage( '../../SkinSupport/ExpandingOpen.gif' ); }" /></a><span class="MCTextPopupBody" style="display: none; ">Versant Object Database</span></span> you need all the dependencies for VOD which also includes some native libraries. How can you avoid these extra dependencies? </p>
        <h2><a name="Workaround"></a>The Workaround</h2>
        <p>Currently there is one work-around. You can start up a db4o server, which acts an intermediate replication server. The clients replicate against that db4o server and the server then replicates to the VOD server. These are the steps which you need to do:</p>
        <ol>
            <li value="1">Setup a db4o server.</li>
            <li value="2">Setup a periodic replication between the db4o server and VOD.</li>
            <li value="3">Create the clients, which replicate against the db4o server.</li>
        </ol>
        <p>
            <img src="mobile_replication.png" />
        </p>
        <h2><a name="Intermediate"></a>Setup the Intermediate db4o Server</h2>
        <p>The intermediate db4o server will act as replication server. It needs following dependencies:</p>
        <p>From the VOD distribution</p>
        <ul>
            <li value="1">jdo2-api-2.1.jar</li>
            <li value="2">vodjdo.jar</li>
            <li value="3">asm-all-3.1.jar</li>
            <li value="4">antlr-3.1.1-runtime.jar</li>
            <li value="5">jta-1.1.jar</li>
            <li value="6">jvi80.jar</li>
        </ul>
        <p>From the db4o / dRS distribution</p>
        <ul>
            <li value="1">db4o-X.XX-core-java5.jar (or db4o-X.XX-all-java5.jar)</li>
            <li value="2">dRS-X.XX-core.jar</li>
        </ul>
        <ul>
            <li value="1">db4o-X.XX-cs-java5.jar (not needed when you use the db4o-X.XX-all-java5.jar)</li>
        </ul>
        <p>After that you can start a db4o server. Note that it is a pure in memory server, since it does not act a persistent store. For more details take a look at the db4o reference documentation.</p>
        <div class="codesnippet" MadCap:conditions="Primary.Java">
            <pre class="prettyprint" xml:space="preserve">ServerConfiguration config = Db4oClientServer.newServerConfiguration();
config.file().generateUUIDs(ConfigScope.GLOBALLY);
config.file().generateCommitTimestamps(<span style="color:Blue;">true</span>);
config.file().storage(<span style="color:Blue;">new</span> PagingMemoryStorage());
config.common().reflectWith(<span style="color:Blue;">new</span> JdoReflector(Thread.currentThread().getContextClassLoader()));
ObjectServer server = Db4oClientServer.openServer(config, <span style="color:#A31515;">"!In:Memory!"</span>, 8080);
server.grantAccess(<span style="color:#A31515;">"sa"</span>, <span style="color:#A31515;">"sa"</span>);</pre>
            <div class="codesnippet-meta">IntermediateDb4oServer.java: Setup server
			<div class="codedownload"><a href="../../CodeExamples/drs/vod/Example-drs-vod-java.zip" class="codedownload" MadCap:conditions="Primary.Online">Download Code</a></div><div class="codedownload copylink-marker" MadCap:conditions="Primary.Online"><a href="#copy">Copy Code</a></div></div>
        </div>
        <h2><a name="Periodic"></a>Setup Periodic Replication</h2>
        <p>The next step is to setup periodic replication between the VOD server and the db4o server. Take a look at how to replicate <a href="vod_replication.htm">against VOD here</a>. The only difference is that it is executed periodically against the intermediate db4o server.</p>
        <div class="codesnippet" MadCap:conditions="Primary.Java">
            <pre class="prettyprint" xml:space="preserve"><span style="color:Blue;">final</span> Timer timer = <span style="color:Blue;">new</span> Timer(<span style="color:Blue;">true</span>);
timer.schedule(<span style="color:Blue;">new</span> TimerTask() {
            @Override
            <span style="color:Blue;">public</span> <![CDATA[ ]]><span style="color:Blue;">void</span> run() {
                runReplication();
            }
        },0, TEN_SECONDS_IN_MILLISEC);</pre>
            <div class="codesnippet-meta">IntermediateDb4oServer.java: Schedule every 10 seconds
			<div class="codedownload"><a href="../../CodeExamples/drs/vod/Example-drs-vod-java.zip" class="codedownload" MadCap:conditions="Primary.Online">Download Code</a></div><div class="codedownload copylink-marker" MadCap:conditions="Primary.Online"><a href="#copy">Copy Code</a></div></div>
        </div>
        <p>The replication against VOD is the same <a href="vod_replication.htm">like here</a>, but with a db4o client.</p>
        <div class="codesnippet" MadCap:conditions="Primary.Java">
            <pre class="prettyprint" xml:space="preserve"><span style="color:Blue;">private</span> <![CDATA[ ]]><span style="color:Blue;">void</span> runReplication() {
    ClientConfiguration config = Db4oClientServer.newClientConfiguration();
    config.common().reflectWith(<span style="color:Blue;">new</span> JdoReflector(Thread.currentThread().getContextClassLoader()));
    ObjectContainer intermediate = Db4oClientServer.openClient(config,<span style="color:#A31515;">"localhost"</span>,8080,<span style="color:#A31515;">"sa"</span>,<span style="color:#A31515;">"sa"</span>);
        ReplicationProvider mobileDatabase
            = <span style="color:Blue;">new</span> Db4oClientServerReplicationProvider(intermediate);
    <span style="color:Green;">// The rest is just the regular replication stuff</span></pre>
            <div class="codesnippet-meta">IntermediateDb4oServer.java: Replicate with the db4o server
			<div class="codedownload"><a href="../../CodeExamples/drs/vod/Example-drs-vod-java.zip" class="codedownload" MadCap:conditions="Primary.Online">Download Code</a></div><div class="codedownload copylink-marker" MadCap:conditions="Primary.Online"><a href="#copy">Copy Code</a></div></div>
        </div>
        <h2><a name="Client"></a>The Client</h2>
        <p>Now the client doesn't need any VOD dependencies, since we replicate via a db4o server. It needs these dependencies:</p>
        <ul>
            <li value="1">db4o-X.XX-core-java5.jar (or db4o-X.XX-all-java5.jar)</li>
            <li value="2">dRS-X.XX-core.jar</li>
            <li value="3">db4o-X.XX-cs-java5.jar (not needed when you use the db4o-X.XX-all-java5.jar)</li>
        </ul>
        <p>Additionally the client needs the classes of the stored objects, but the not enhanced version of the classes. So you have to make sure that you've  the original classes on the client and the enhanced classes on the server.</p>
        <p>After that the replication is very easy. You just connect to the db4o server and replicate the objects. <a href="../db4o_databases_replication/bi-directional_replication.htm" target="" title="" alt="" class="MCXref" xrefformat="See &quot;{paratext}&quot;">See "Bidirectional Replication"</a></p>
        <div class="codesnippet" MadCap:conditions="Primary.Java">
            <pre class="prettyprint" xml:space="preserve">EmbeddedConfiguration config = Db4oEmbedded.newConfiguration();
config.file().generateUUIDs(ConfigScope.GLOBALLY);
config.file().generateCommitTimestamps(<span style="color:Blue;">true</span>);
ObjectContainer theMobileDatabase = Db4oEmbedded.openFile(config, <span style="color:#A31515;">"mobileDatabase.db4o"</span>);
ObjectContainer db4oServer = Db4oClientServer.openClient(<span style="color:#A31515;">"localhost"</span>, 8080, <span style="color:#A31515;">"sa"</span>, <span style="color:#A31515;">"sa"</span>);
<span style="color:Blue;">try</span> {
    ReplicationProvider localProvider = <span style="color:Blue;">new</span> Db4oEmbeddedReplicationProvider(theMobileDatabase);
    ReplicationProvider remoteProvider = <span style="color:Blue;">new</span> Db4oClientServerReplicationProvider(db4oServer);

    <span style="color:Blue;">final</span> ReplicationSession replicationSession = Replication.begin(localProvider, remoteProvider);

    replicateAll(replicationSession,localProvider.objectsChangedSinceLastReplication());
    replicateAll(replicationSession,remoteProvider.objectsChangedSinceLastReplication());

    replicationSession.commit();

} <span style="color:Blue;">catch</span> (Exception e){
    <span style="color:Blue;">throw</span> <![CDATA[ ]]><span style="color:Blue;">new</span> RuntimeException(e);
} <span style="color:Blue;">finally</span>{
    db4oServer.close();
    theMobileDatabase.close();
}</pre>
            <div class="codesnippet-meta">ClientReplicator.java: Replicate against the db4o intermediate server
			<div class="codedownload"><a href="../../CodeExamples/drs/vod/Example-drs-vod-java.zip" class="codedownload" MadCap:conditions="Primary.Online">Download Code</a></div><div class="codedownload copylink-marker" MadCap:conditions="Primary.Online"><a href="#copy">Copy Code</a></div></div>
        </div>
        <script src="../../Resources/Code/jquery.min.js">
        </script>
        <script src="../../Resources/Code/ZeroClipboard.js">
        </script>
        <script type="text/javascript">/* <![CDATA[ */
window.onload = function(){
	var pathToFlash = $('html').attr('MadCap:PathToHelpSystem') + 'Content/Resources/Code/ZeroClipboard.swf';
	ZeroClipboard.setMoviePath(pathToFlash);
			
	function bindToClipBord(element,content){
		var clip = new ZeroClipboard.Client();
		clip.setText(content);
		clip.glue(element);
	};
		
	if(location.protocol==='file:'){
		$('.copylink-marker').remove();
	} else{
			$('.copylink-marker').each(function(){
				var text = $(this).parent().parent().children('.prettyprint').text();
				$(this).hover(function(){
					bindToClipBord(this,text);
				},
				function(){});
			});	
	}		
};
                /* ]]> */</script>
        <script type="text/javascript" src="../../SkinSupport/MadCapBodyEnd.js">
        </script>
    </body>
</html>