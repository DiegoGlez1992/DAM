<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="2" MadCap:lastHeight="120" MadCap:lastWidth="624" MadCap:disableMasterStylesheet="true" MadCap:tocPath="Advanced Features|Diagnostics" MadCap:InPreviewMode="false" MadCap:RuntimeFileType="Topic" MadCap:TargetType="WebHelp" MadCap:PathToHelpSystem="../../../" MadCap:HelpSystemFileName="index.xml" MadCap:SearchType="Stem">
    <head><title>Diagnostic Messages Filter</title>
        <link href="../../SkinSupport/MadCap.css" rel="stylesheet" />
        <link href="../../Resources/Stylesheets/OnlineStyle.css" rel="stylesheet" />
        <script src="../../SkinSupport/MadCapAll.js" type="text/javascript">
        </script>
    </head>
    <body>
        <p class="MCWebHelpFramesetLink" style="display: none;"><a href="../../../index_CSH.html#advanced_topics/diagnostics/diagnostic_messages_filter.htm" style="">Open topic with navigation</a>
        </p>
        <div class="MCBreadcrumbsBox"><span class="MCBreadcrumbsPrefix">You are here: </span><a class="MCBreadcrumbsLink" href="../../advanced_topics.htm">Advanced Features</a><span class="MCBreadcrumbsDivider"> &gt; </span><a class="MCBreadcrumbsLink" href="../diagnostics.htm">Diagnostics</a><span class="MCBreadcrumbsDivider"> &gt; </span><span class="MCBreadcrumbs">Diagnostic Messages Filter</span>
        </div>
        <script type="text/javascript">/*<![CDATA[*/
			document.write("<a href=\"" + location.href +"\">");
			document.write("Direct Link to this Article");
			document.write('</a>');/*]]>*/</script>
        <h1>Diagnostic Messages Filter</h1>
        <p>The standard listeners can potentially produce quite a lot of messages. By writing your own DiagnosticListener you can filter that information.</p>
        <p>On the stage of application tuning you can be interested in optimizing performance through indexing. Diagnostics can help you with giving information about queries that are running on un-indexed fields. By having this information you can decide which queries are frequent and heavy and should be indexed, and which have little performance impact and do not need an index. Field indexes dramatically improve query performance but they may considerably reduce storage and update performance. </p>
        <p>In order to get rid of all unnecessary diagnostic information and concentrate on indexes let's create special diagnostic listener:</p>
        <div class="codesnippet" MadCap:conditions="Primary.Java">
            <pre class="prettyprint" xml:space="preserve"><span style="color:Blue;">private</span> <![CDATA[ ]]><span style="color:Blue;">static</span> <![CDATA[ ]]><span style="color:Blue;">class</span> DiagnosticFilter <span style="color:Blue;">implements</span> DiagnosticListener{
    <span style="color:Blue;">private</span> <![CDATA[ ]]><span style="color:Blue;">final</span> Set&lt;Class&gt; filterFor;
    <span style="color:Blue;">private</span> <![CDATA[ ]]><span style="color:Blue;">final</span> DiagnosticListener delegate;

    <span style="color:Blue;">private</span> DiagnosticFilter(DiagnosticListener delegate,Class&lt;? <span style="color:Blue;">extends</span> Diagnostic&gt;...filterFor) {
        <span style="color:Blue;">this</span>.delegate = delegate;
        <span style="color:Blue;">this</span>.filterFor = <span style="color:Blue;">new</span> HashSet&lt;Class&gt;(Arrays.asList(filterFor));
    }

    <span style="color:Blue;">public</span> <![CDATA[ ]]><span style="color:Blue;">void</span> onDiagnostic(Diagnostic diagnostic) {
        Class&lt;?&gt; type = diagnostic.getClass();
        <span style="color:Blue;">if</span>(filterFor.contains(type)){
            delegate.onDiagnostic(diagnostic);
        }
    }
}</pre>
            <div class="codesnippet-meta">DiagnosticsExamples.java: A simple message filter
			<div class="codedownload"><a href="../../CodeExamples/tuning/diagnostics/Example-tuning-diagnostics-java.zip" class="codedownload" MadCap:conditions="Primary.Online">Download Code</a></div><div class="codedownload copylink-marker" MadCap:conditions="Primary.Online"><a href="#copy">Copy Code</a></div></div>
        </div>
        <p>After that we can use the filter-listener. It takes two arguments. The first one is a regular listener, the second is a list of all messages which are passed through.</p>
        <div class="codesnippet" MadCap:conditions="Primary.Java">
            <pre class="prettyprint" xml:space="preserve">EmbeddedConfiguration configuration = Db4oEmbedded.newConfiguration();
configuration.common().diagnostic()
        .addListener(<span style="color:Blue;">new</span> DiagnosticFilter(<span style="color:Blue;">new</span> DiagnosticToConsole(), LoadedFromClassIndex.<span style="color:Blue;">class</span>));</pre>
            <div class="codesnippet-meta">DiagnosticsExamples.java: Filter for unindexed fields
			<div class="codedownload"><a href="../../CodeExamples/tuning/diagnostics/Example-tuning-diagnostics-java.zip" class="codedownload" MadCap:conditions="Primary.Online">Download Code</a></div><div class="codedownload copylink-marker" MadCap:conditions="Primary.Online"><a href="#copy">Copy Code</a></div></div>
        </div>
        <p>&#160;</p>
        <script src="../../Resources/Code/jquery.min.js">
        </script>
        <script src="../../Resources/Code/ZeroClipboard.js">
        </script>
        <script type="text/javascript">/* <![CDATA[ */
window.onload = function(){
	var pathToFlash = $('html').attr('MadCap:PathToHelpSystem') + 'Content/Resources/Code/ZeroClipboard.swf';
	ZeroClipboard.setMoviePath(pathToFlash);
			
	function bindToClipBord(element,content){
		var clip = new ZeroClipboard.Client();
		clip.setText(content);
		clip.glue(element);
	};
		
	if(location.protocol==='file:'){
		$('.copylink-marker').remove();
	} else{
			$('.copylink-marker').each(function(){
				var text = $(this).parent().parent().children('.prettyprint').text();
				$(this).hover(function(){
					bindToClipBord(this,text);
				},
				function(){});
			});	
	}		
};
                /* ]]> */</script>
        <script type="text/javascript" src="../../SkinSupport/MadCapBodyEnd.js">
        </script>
    </body>
</html>