<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="2" MadCap:lastHeight="120" MadCap:lastWidth="624" MadCap:disableMasterStylesheet="true" MadCap:tocPath="Advanced Features" MadCap:InPreviewMode="false" MadCap:RuntimeFileType="Topic" MadCap:TargetType="WebHelp" MadCap:PathToHelpSystem="../../" MadCap:HelpSystemFileName="index.xml" MadCap:SearchType="Stem">
    <head><title>db4o Meta-Information</title>
        <link href="../SkinSupport/MadCap.css" rel="stylesheet" />
        <link href="../Resources/Stylesheets/OnlineStyle.css" rel="stylesheet" />
        <script src="../SkinSupport/MadCapAll.js" type="text/javascript">
        </script>
    </head>
    <body>
        <p class="MCWebHelpFramesetLink" style="display: none;"><a href="../../index_CSH.html#advanced_topics/db4o_meta-information.htm" style="">Open topic with navigation</a>
        </p>
        <div class="MCBreadcrumbsBox"><span class="MCBreadcrumbsPrefix">You are here: </span><a class="MCBreadcrumbsLink" href="../advanced_topics.htm">Advanced Features</a><span class="MCBreadcrumbsDivider"> &gt; </span><span class="MCBreadcrumbs">db4o Meta-Information</span>
        </div>
        <script type="text/javascript">/*<![CDATA[*/
			document.write("<a href=\"" + location.href +"\">");
			document.write("Direct Link to this Article");
			document.write('</a>');/*]]>*/</script>
        <h1><a name="kanchor41"></a>db4o Meta-Information</h1>
        <p>Db4o meta information API provides an access to the actual structure of db4o database file. Its primary use is <a href="refactoring_and_schema_evolution.htm">refactoring</a>.</p>
        <p>You can access the meta information via extended object container. You can ask the object container for all stored classes or for a specific class. To find the meta information for a specific class you can provide the full name, the class itself or an instance of a particular type.</p>
        <p>Note that db4o also returns information about internal db4o instances which have been stored. </p>
        <div class="codesnippet" MadCap:conditions="Primary.Java">
            <pre class="prettyprint" xml:space="preserve"><span style="color:Green;">// Get the information about all stored classes.</span>
StoredClass[] classesInDB = container.ext().storedClasses();
<span style="color:Blue;">for</span> (StoredClass storedClass : classesInDB) {
    System.out.println(storedClass.getName());
}

<span style="color:Green;">// Information for a certain class</span>
StoredClass metaInfo = container.ext().storedClass(Person.<span style="color:Blue;">class</span>);</pre>
            <div class="codesnippet-meta">MetaInfoExample.java: All stored classes
			<div class="codedownload"><a href="../CodeExamples/metainfo/Example-db4odoc-metainfo-java.zip" class="codedownload" MadCap:conditions="Primary.Online">Download Code</a></div><div class="codedownload copylink-marker" MadCap:conditions="Primary.Online"><a href="#copy">Copy Code</a></div></div>
        </div>
        <p>The stored class interface provides all meta information db4o knows about. You can get the name of the class, ask for the instance count, ask for a list of the ids and get the meta info for super classes.</p>
        <p>The most important information about the stored classes meta info is the list of the field which are stored. You can get a list of all fields or ask for specific fields. Note that the meta information might return information for fields which don't exist anymore. This is <a href="refactoring_and_schema_evolution/field_type_change.htm">useful for refactoring</a>. </p>
        <div class="codesnippet" MadCap:conditions="Primary.Java">
            <pre class="prettyprint" xml:space="preserve">StoredClass metaInfoForPerson = container.ext().storedClass(Person.<span style="color:Blue;">class</span>);
<span style="color:Green;">// Access all existing fields</span>
<span style="color:Blue;">for</span> (StoredField field : metaInfoForPerson.getStoredFields()) {
    System.out.println(<span style="color:#A31515;">"Field: "</span>+field.getName());
}
<span style="color:Green;">// Accessing the field 'name' of any type.</span>
StoredField nameField = metaInfoForPerson.storedField(<span style="color:#A31515;">"name"</span>, <span style="color:Blue;">null</span>);
<span style="color:Green;">// Accessing the string field 'name'. Important if this field had another time in previous</span>
<span style="color:Green;">// versions of the class model</span>
StoredField ageField = metaInfoForPerson.storedField(<span style="color:#A31515;">"age"</span>,<span style="color:Blue;">int</span>.<span style="color:Blue;">class</span>);

<span style="color:Green;">// Check if the field is indexed</span>
<span style="color:Blue;">boolean</span> isAgeFieldIndexed = ageField.hasIndex();

<span style="color:Green;">// Get the type of the field</span>
String fieldType = ageField.getStoredType().getName();</pre>
            <div class="codesnippet-meta">MetaInfoExample.java: Accessing stored fields
			<div class="codedownload"><a href="../CodeExamples/metainfo/Example-db4odoc-metainfo-java.zip" class="codedownload" MadCap:conditions="Primary.Online">Download Code</a></div><div class="codedownload copylink-marker" MadCap:conditions="Primary.Online"><a href="#copy">Copy Code</a></div></div>
        </div>
        <p>On a the field meta information you can find out the name, type and if the field has an index. And you also can access the values of a object via the stored field. This allows you to access information which is stored in the database but has been removed from the class model. This is <a href="refactoring_and_schema_evolution/field_type_change.htm">useful for refactoring</a>.</p>
        <div class="codesnippet" MadCap:conditions="Primary.Java">
            <pre class="prettyprint" xml:space="preserve">StoredClass metaForPerson = container.ext().storedClass(Person.<span style="color:Blue;">class</span>);
StoredField metaNameField = metaForPerson.storedField(<span style="color:#A31515;">"name"</span>, <span style="color:Blue;">null</span>);

ObjectSet&lt;Person&gt; persons = container.query(Person.<span style="color:Blue;">class</span>);
<span style="color:Blue;">for</span> (Person person : persons) {
    String name = (String)metaNameField.get(person);
    System.out.println(<span style="color:#A31515;">"Name is "</span>+name);
}</pre>
            <div class="codesnippet-meta">MetaInfoExample.java: Access via meta data
			<div class="codedownload"><a href="../CodeExamples/metainfo/Example-db4odoc-metainfo-java.zip" class="codedownload" MadCap:conditions="Primary.Online">Download Code</a></div><div class="codedownload copylink-marker" MadCap:conditions="Primary.Online"><a href="#copy">Copy Code</a></div></div>
        </div>
        <script src="../Resources/Code/jquery.min.js">
        </script>
        <script src="../Resources/Code/ZeroClipboard.js">
        </script>
        <script type="text/javascript">/* <![CDATA[ */
window.onload = function(){
	var pathToFlash = $('html').attr('MadCap:PathToHelpSystem') + 'Content/Resources/Code/ZeroClipboard.swf';
	ZeroClipboard.setMoviePath(pathToFlash);
			
	function bindToClipBord(element,content){
		var clip = new ZeroClipboard.Client();
		clip.setText(content);
		clip.glue(element);
	};
		
	if(location.protocol==='file:'){
		$('.copylink-marker').remove();
	} else{
			$('.copylink-marker').each(function(){
				var text = $(this).parent().parent().children('.prettyprint').text();
				$(this).hover(function(){
					bindToClipBord(this,text);
				},
				function(){});
			});	
	}		
};
                /* ]]> */</script>
        <script type="text/javascript" src="../SkinSupport/MadCapBodyEnd.js">
        </script>
    </body>
</html>