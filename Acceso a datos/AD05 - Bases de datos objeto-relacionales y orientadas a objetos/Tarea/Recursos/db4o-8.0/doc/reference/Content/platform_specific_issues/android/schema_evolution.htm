<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="2" MadCap:lastHeight="120" MadCap:lastWidth="624" MadCap:disableMasterStylesheet="true" MadCap:tocPath="Platform Specific Issues|Android|Comparison With SQLite" MadCap:InPreviewMode="false" MadCap:RuntimeFileType="Topic" MadCap:TargetType="WebHelp" MadCap:PathToHelpSystem="../../../" MadCap:HelpSystemFileName="index.xml" MadCap:SearchType="Stem">
    <head><title>Schema Evolution</title>
        <link href="../../SkinSupport/MadCap.css" rel="stylesheet" />
        <link href="../../Resources/Stylesheets/OnlineStyle.css" rel="stylesheet" />
        <script src="../../SkinSupport/MadCapAll.js" type="text/javascript">
        </script>
    </head>
    <body>
        <p class="MCWebHelpFramesetLink" style="display: none;"><a href="../../../index_CSH.html#platform_specific_issues/android/schema_evolution.htm" style="">Open topic with navigation</a>
        </p>
        <div class="MCBreadcrumbsBox"><span class="MCBreadcrumbsPrefix">You are here: </span><a class="MCBreadcrumbsLink" href="../../platform_specific_issues.htm">Platform Specific Issues</a><span class="MCBreadcrumbsDivider"> &gt; </span><a class="MCBreadcrumbsLink" href="../android.htm">Android</a><span class="MCBreadcrumbsDivider"> &gt; </span><a class="MCBreadcrumbsLink" href="comparison_with_sqlite.htm">Comparison With SQLite</a><span class="MCBreadcrumbsDivider"> &gt; </span><span class="MCBreadcrumbs">Schema Evolution</span>
        </div>
        <script type="text/javascript">/*<![CDATA[*/
			document.write("<a href=\"" + location.href +"\">");
			document.write("Direct Link to this Article");
			document.write('</a>');/*]]>*/</script>
        <h1>Schema Evolution</h1>
        <p>When a new application development is considered it is
important to think about its evolution. What happens if your initial model does
not suffice and you need changes or additions? Let's look how db4o and SQLite
applications can handle it.</p>
        <p>To keep the example simple, let's add a registration record
to our car:</p>
        <div class="codesnippet" MadCap:conditions="Primary.Java">
            <pre class="prettyprint" xml:space="preserve"><span style="color:Blue;">private</span> RegistrationRecord registration;
   
<span style="color:Blue;">public</span> RegistrationRecord getRegistration() {
	<span style="color:Blue;">return</span> registration;
}

<span style="color:Blue;">public</span> <![CDATA[ ]]><span style="color:Blue;">void</span> setRegistration(RegistrationRecord registration) {
	<span style="color:Blue;">this</span>.registration = registration;
}</pre>
            <div class="codesnippet-meta">Car.java: Add a new field to the car
			<div class="codedownload"><a href="../../CodeExamples/Android/src/com/db4odoc/android/Example-db4odoc-android-java.zip" class="codedownload" MadCap:conditions="Primary.Online">Download Code</a></div><div class="codedownload copylink-marker" MadCap:conditions="Primary.Online"><a href="#copy">Copy Code</a></div></div>
        </div>
        <p>Ok, the application is changed to take care for the new class. What
about our databases?</p>
        <h3>Schema Evolution in db4o</h3>
        <p>db4o supports such schema change on the fly: we can select
values and update the new field too: </p>
        <div class="codesnippet" MadCap:conditions="Primary.Java">
            <pre class="prettyprint" xml:space="preserve">ObjectContainer container = database();
<span style="color:Blue;">if</span> (container != <span style="color:Blue;">null</span>){
	ObjectSet&lt;Car&gt;  result = container.query(<span style="color:Blue;">new</span> Predicate&lt;Car&gt;(){
		@Override
		<span style="color:Blue;">public</span> <![CDATA[ ]]><span style="color:Blue;">boolean</span> match(Car car) {
			<span style="color:Blue;">return</span> car.getPilot().getPoints()==15;
		}
		
	});
	<span style="color:Blue;">if</span> (!result.hasNext()){
		logToConsole(0, <span style="color:#A31515;">"Car not found, refill the database to continue."</span>, <span style="color:Blue;">false</span>);
	} <span style="color:Blue;">else</span> {
		Car car = result.next();
		logToConsole(startTime, <span style="color:#A31515;">"Selected Car ("</span> + car + <span style="color:#A31515;">"): "</span>, <span style="color:Blue;">false</span>);
		startTime = System.currentTimeMillis();
		car.setRegistration(<span style="color:Blue;">new</span> RegistrationRecord(<span style="color:#A31515;">"A1"</span>, <span style="color:Blue;">new</span> Date()));
		logToConsole(startTime, <span style="color:#A31515;">"Updated Car ("</span> + car + <span style="color:#A31515;">"): "</span>, <span style="color:Blue;">true</span>);
	}			
}</pre>
            <div class="codesnippet-meta">Db4oExample.java: update a car with db4o
			<div class="codedownload"><a href="../../CodeExamples/Android/src/com/db4odoc/android/Example-db4odoc-android-java.zip" class="codedownload" MadCap:conditions="Primary.Online">Download Code</a></div><div class="codedownload copylink-marker" MadCap:conditions="Primary.Online"><a href="#copy">Copy Code</a></div></div>
        </div>
        <h3>Schema Evolution in SQLite</h3>
        <p>For SQLite database model should be synchronized with the
object model:</p>
        <div class="codesnippet" MadCap:conditions="Primary.Java">
            <pre class="prettyprint" xml:space="preserve">db.execSQL(<span style="color:#A31515;">"CREATE TABLE IF NOT EXISTS REG_RECORDS ("</span>
		+ <span style="color:#A31515;">"id TEXT PRIMARY KEY, year DATE);"</span>);
db.execSQL(<span style="color:#A31515;">"CREATE INDEX  IF NOT EXISTS  IDX_REG_RECORDS ON REG_RECORDS (id);"</span>);
db.execSQL(<span style="color:#A31515;">"ALTER TABLE "</span> + DB_TABLE_CAR + <span style="color:#A31515;">" ADD reg_record TEXT;"</span>);</pre>
            <div class="codesnippet-meta">SqlExample.java: upgrade schema in SQLite
			<div class="codedownload"><a href="../../CodeExamples/Android/src/com/db4odoc/android/Example-db4odoc-android-java.zip" class="codedownload" MadCap:conditions="Primary.Online">Download Code</a></div><div class="codedownload copylink-marker" MadCap:conditions="Primary.Online"><a href="#copy">Copy Code</a></div></div>
        </div>
        <p>Now we can try to retrieve and update records:</p>
        <div class="codesnippet" MadCap:conditions="Primary.Java">
            <pre class="prettyprint" xml:space="preserve">SQLiteDatabase db = database();
db.execSQL(<span style="color:#A31515;">"INSERT INTO REG_RECORDS (id,year) VALUES ('A1', DATETIME('NOW'))"</span>);

ContentValues updateValues = <span style="color:Blue;">new</span> ContentValues();
updateValues.put(<span style="color:#A31515;">"reg_record"</span>, <span style="color:#A31515;">"A1"</span>);
<span style="color:Blue;">int</span> count = db.update(DB_TABLE_CAR, updateValues,
		<span style="color:#A31515;">"pilot IN (SELECT id FROM "</span> + DB_TABLE_PILOT
				+ <span style="color:#A31515;">" WHERE points = 15)"</span>, <span style="color:Blue;">null</span>);
<span style="color:Blue;">if</span> (count == 0) {
	logToConsole(0, <span style="color:#A31515;">"Car not found, refill the database to continue."</span>,
			<span style="color:Blue;">false</span>);
} <span style="color:Blue;">else</span> {
	Cursor c = db.rawQuery(<span style="color:#A31515;">"SELECT c.model, r.id, r.year from car c, "</span>
			+ <span style="color:#A31515;">"REG_RECORDS r, pilot p where c.reg_record = r.id "</span>
			+ <span style="color:#A31515;">"AND c.pilot = p.id AND p.points = 15;"</span>, <span style="color:Blue;">null</span>);
	<span style="color:Blue;">if</span> (c.getCount() == 0) {
		logToConsole(0,
				<span style="color:#A31515;">"Car not found, refill the database to continue."</span>,
				<span style="color:Blue;">false</span>);
		<span style="color:Blue;">return</span>;
	}
	c.moveToFirst();
	String date = c.getString(2);
	
	Date dt = parseDate(date);
	RegistrationRecord record = <span style="color:Blue;">new</span> RegistrationRecord(c.getString(1),dt);
	
	Car car = <span style="color:Blue;">new</span> Car();
	car.setModel(c.getString(0));
	car.setRegistration(record);
	logToConsole(startTime, <span style="color:#A31515;">"Updated Car ("</span> + car + <span style="color:#A31515;">"): "</span>, <span style="color:Blue;">true</span>);
}</pre>
            <div class="codesnippet-meta">SqlExample.java: update a car with SQLite
			<div class="codedownload"><a href="../../CodeExamples/Android/src/com/db4odoc/android/Example-db4odoc-android-java.zip" class="codedownload" MadCap:conditions="Primary.Online">Download Code</a></div><div class="codedownload copylink-marker" MadCap:conditions="Primary.Online"><a href="#copy">Copy Code</a></div></div>
        </div>
        <h3>Conclusion</h3>
        <p>You can see that schema evolution is much easier with db4o.
But the main difficulty that is not visible from the example is that schema
evolution with SQLite database can potentially introduce a lot of bugs that
will be difficult to spot. For more information see
<a href="../../advanced_topics/refactoring_and_schema_evolution.htm">Refactoring and Schema Evolution</a>.</p>
        <script src="../../Resources/Code/jquery.min.js">
        </script>
        <script src="../../Resources/Code/ZeroClipboard.js">
        </script>
        <script type="text/javascript">/* <![CDATA[ */
window.onload = function(){
	var pathToFlash = $('html').attr('MadCap:PathToHelpSystem') + 'Content/Resources/Code/ZeroClipboard.swf';
	ZeroClipboard.setMoviePath(pathToFlash);
			
	function bindToClipBord(element,content){
		var clip = new ZeroClipboard.Client();
		clip.setText(content);
		clip.glue(element);
	};
		
	if(location.protocol==='file:'){
		$('.copylink-marker').remove();
	} else{
			$('.copylink-marker').each(function(){
				var text = $(this).parent().parent().children('.prettyprint').text();
				$(this).hover(function(){
					bindToClipBord(this,text);
				},
				function(){});
			});	
	}		
};
                /* ]]> */</script>
        <script type="text/javascript" src="../../SkinSupport/MadCapBodyEnd.js">
        </script>
    </body>
</html>