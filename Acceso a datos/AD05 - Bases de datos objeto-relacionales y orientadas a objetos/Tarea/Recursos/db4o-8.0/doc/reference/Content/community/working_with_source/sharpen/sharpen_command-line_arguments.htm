<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="2" MadCap:lastHeight="120" MadCap:lastWidth="624" MadCap:disableMasterStylesheet="true" MadCap:tocPath="Community|Working With Source Code|Sharpen" MadCap:InPreviewMode="false" MadCap:RuntimeFileType="Topic" MadCap:TargetType="WebHelp" MadCap:PathToHelpSystem="../../../../" MadCap:HelpSystemFileName="index.xml" MadCap:SearchType="Stem">
    <head><title>Sharpen Command-Line Arguments</title>
        <link href="../../../SkinSupport/MadCap.css" rel="stylesheet" />
        <link href="../../../Resources/Stylesheets/OnlineStyle.css" rel="stylesheet" />
        <script src="../../../SkinSupport/MadCapAll.js">
        </script>
    </head>
    <body>
        <p class="MCWebHelpFramesetLink" style="display: none;"><a href="../../../../index_CSH.html#community/working_with_source/sharpen/sharpen_command-line_arguments.htm" style="">Open topic with navigation</a>
        </p>
        <div class="MCBreadcrumbsBox"><span class="MCBreadcrumbsPrefix">You are here: </span><a class="MCBreadcrumbsLink" href="../../../community.htm">Community</a><span class="MCBreadcrumbsDivider"> &gt; </span><a class="MCBreadcrumbsLink" href="../../working_with_source_code.htm">Working With Source Code</a><span class="MCBreadcrumbsDivider"> &gt; </span><a class="MCBreadcrumbsLink" href="../sharpen.htm">Sharpen</a><span class="MCBreadcrumbsDivider"> &gt; </span><span class="MCBreadcrumbs">Sharpen Command-Line Arguments</span>
        </div>
        <script type="text/javascript">/*<![CDATA[*/
			document.write("<a href=\"" + location.href +"\">");
			document.write("Direct Link to this Article");
			document.write('</a>');/*]]>*/</script>
        <h1>Sharpen Command-Line Arguments</h1>
        <p><span class="MCTextPopup"><a href="javascript:void(0);" class="MCTextPopupSpot" onclick="FMCTextPopup( event, this ); return false;">Sharpen<img style="border: none;margin-left: 5px;" src="../../../SkinSupport/ExpandingClosed.gif" MadCap:altsrc="../../../SkinSupport/ExpandingOpen.gif" class="MCExpandingIcon" onload="if ( typeof( FMCPreloadImage ) == 'function' ) { FMCPreloadImage( '../../../SkinSupport/ExpandingOpen.gif' ); }" /></a><span class="MCTextPopupBody" style="display: none; ">Sharpen is a tool to translate Java source code to C# source code</span></span> command-line arguments can be defined in an options
file</p>
        <pre class="monospace" xml:space="preserve"><i>&lt;sharpen workspace="${target.dir}" resource="sharpened_examples/src"&gt;
   &lt;args&gt;
      &lt;!-- Sharpen options are defined in a separate file --&gt;
      &lt;arg value="@sharpen-all-options" /&gt;
    &lt;/args&gt;
 &lt;/sharpen&gt;</i>      </pre>
        <p>Here sharpen-all-options file contains all command-line
options needed to convert current project. For an example of command-line
options file see the <a href="example_conversion.htm">previous topic</a>.</p>
        <p>Command-line arguments can also be specified directly in an
ant script:</p>
        <pre class="monospace" xml:space="preserve"><i>&lt;sharpen workspace="${dir.sharpen}" resource="db4oj/core/src"&gt;
    &lt;args&gt;
        &lt;arg value="-xmldoc"/&gt;
        &lt;arg file="config/sharpen/ApiOverlay.xml" /&gt;       
        &lt;arg value="@sharpen-all-options" /&gt;
     &lt;/args&gt;
 &lt;/sharpen&gt;</i>
        </pre>
        <p>The following table shows available command-line options, their
meaning and example usage:</p>
        <table border="1" cellpadding="0" cellspacing="0">
            <tr>
                <td valign="top">
                    <p><b>Argument</b>
                    </p>
                </td>
                <td valign="top">
                    <p><b>Usage</b>
                    </p>
                </td>
            </tr>
            <tr>
                <td valign="top">
                    <p>-pascalCase</p>
                </td>
                <td valign="top">
                    <p>Convert Java identifiers to Pascal case</p>
                </td>
            </tr>
            <tr>
                <td valign="top">
                    <p>-pascalCase+</p>
                </td>
                <td valign="top">
                    <p>Convert Java indentifiers and package names (namespaces)
  to Pascal case </p>
                </td>
            </tr>
            <tr>
                <td valign="top">
                    <p>-cp</p>
                </td>
                <td valign="top">
                    <p>Adds a new entry to classpath:</p>
                    <p>&lt;arg
  value="-cp" /&gt;</p>
                    <p>&lt;arg path="lib/db4o-7.2.37.10417-java5.jar"
  /&gt;</p>
                </td>
            </tr>
            <tr>
                <td valign="top">
                    <p>-srcFolder</p>
                </td>
                <td valign="top">
                    <p>Adds a new source folder for sharpening</p>
                </td>
            </tr>
            <tr>
                <td valign="top">
                    <p>-nativeTypeSystem</p>
                </td>
                <td valign="top">
                    <p>Map java classes to .NET classes with a similar
  functionality. For example: java.lang.Class - System.Type</p>
                </td>
            </tr>
            <tr>
                <td valign="top">
                    <p>-nativeInterfaces</p>
                </td>
                <td valign="top">
                    <p>Adds an "I" in front of the interface name</p>
                </td>
            </tr>
            <tr>
                <td valign="top">
                    <p>-organizeUsings</p>
                </td>
                <td valign="top">
                    <p>Adds "using" for the types used </p>
                </td>
            </tr>
            <tr>
                <td valign="top">
                    <p>-fullyQualify</p>
                </td>
                <td valign="top">
                    <p>Converts to a fully-qualified name:</p>
                    <p>-fullyQualify File</p>
                </td>
            </tr>
            <tr>
                <td valign="top">
                    <p>-namespaceMapping</p>
                </td>
                <td valign="top">
                    <p>Maps a java package name to a .NET namespace. For example:</p>
                    <p>-namespaceMapping com.db4o Db4objects.Db4o</p>
                </td>
            </tr>
            <tr>
                <td valign="top">
                    <p>-methodMapping</p>
                </td>
                <td valign="top">
                    <p>Maps a java method name to a .NET method (can be method in
  another class). For example:</p>
                    <p>-methodMapping java.util.Date.getTime
  Sharpen.Runtime.ToJavaMilliseconds</p>
                </td>
            </tr>
            <tr>
                <td valign="top">
                    <p>-typeMapping</p>
                </td>
                <td valign="top">
                    <p>Maps a java class to .NET type:</p>
                    <p>-typeMapping com.db4o.Db4o Db4objects.Db4o.Db4oFactory</p>
                </td>
            </tr>
            <tr>
                <td valign="top">
                    <p>-propertyMapping</p>
                </td>
                <td valign="top">
                    <p>Maps a java method to .NET property:</p>
                    <p>-propertyMapping com.db4odoc.structured.Car.getPilot Pilot</p>
                </td>
            </tr>
            <tr>
                <td valign="top">
                    <p>-runtimeTypeName</p>
                </td>
                <td valign="top">
                    <p> Name of the runtime class. The runtime class provides implementation for methods that don't have a direct mapping or that are simpler to map at the language level than at the sharpen level. For instance: String.substring, String.valueOf, Exception.printStackTrace, etc. </p>
                    <p>For a complete list of all the method that can be mapped to the runtime class see Configuration#runtimeMethod call hierarchy.  </p>
                </td>
            </tr>
            <tr>
                <td valign="top">
                    <p>-header</p>
                </td>
                <td valign="top">
                    <p>Header comment to be added to all converted files.</p>
                    <p>-header config/copyright_comment.txt</p>
                </td>
            </tr>
            <tr>
                <td valign="top">
                    <p>-xmldoc</p>
                </td>
                <td valign="top">
                    <p>Specifies an xml-overlay file, which overrides javadoc
  documentation for specific classes:</p>
                    <p>-xmldoc config/sharpen/ApiOverlay.xml</p>
                </td>
            </tr>
            <tr>
                <td valign="top">-eventMapping</td>
                <td valign="top">Converts the methods to an event.</td>
            </tr>
            <tr>
                <td valign="top">-eventAddMapping</td>
                <td valign="top">Marks the method as an event subscription method. Invocations to the method in the form &lt;target&gt;.method(&lt;argument&gt;) will be replaced by the c# event subscription idiom: &lt;target&gt; += &lt;argument&gt; </td>
            </tr>
            <tr>
                <td valign="top">-conditionalCompilation</td>
                <td valign="top">
                    <p valign="top">Add a condition when to translate the Java code</p>
                    <p valign="top">- -conditionalCompilation com.db4o.db4ounit.common.cs !SILVERLIGHT</p>
                </td>
            </tr>
            <tr>
                <td valign="top">-configurationClass</td>
                <td valign="top">Change the configuration class. The default is 'sharpen.core.DefaultConfiguration'</td>
            </tr>
        </table>
        <script src="../../../Resources/Code/jquery.min.js">
        </script>
        <script src="../../../Resources/Code/ZeroClipboard.js">
        </script>
        <script type="text/javascript">/* <![CDATA[ */
window.onload = function(){
	var pathToFlash = $('html').attr('MadCap:PathToHelpSystem') + 'Content/Resources/Code/ZeroClipboard.swf';
	ZeroClipboard.setMoviePath(pathToFlash);
			
	function bindToClipBord(element,content){
		var clip = new ZeroClipboard.Client();
		clip.setText(content);
		clip.glue(element);
	};
		
	if(location.protocol==='file:'){
		$('.copylink-marker').remove();
	} else{
			$('.copylink-marker').each(function(){
				var text = $(this).parent().parent().children('.prettyprint').text();
				$(this).hover(function(){
					bindToClipBord(this,text);
				},
				function(){});
			});	
	}		
};
                /* ]]> */</script>
        <script type="text/javascript" src="../../../SkinSupport/MadCapBodyEnd.js">
        </script>
    </body>
</html>