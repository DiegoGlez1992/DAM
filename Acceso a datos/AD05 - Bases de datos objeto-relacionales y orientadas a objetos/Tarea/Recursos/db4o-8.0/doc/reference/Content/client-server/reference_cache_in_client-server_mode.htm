<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="2" MadCap:lastHeight="120" MadCap:lastWidth="624" MadCap:disableMasterStylesheet="true" MadCap:tocPath="Client-Server" MadCap:InPreviewMode="false" MadCap:RuntimeFileType="Topic" MadCap:TargetType="WebHelp" MadCap:PathToHelpSystem="../../" MadCap:HelpSystemFileName="index.xml" MadCap:SearchType="Stem">
    <head><title>Reference Cache In Client-Server Mode</title>
        <link href="../SkinSupport/MadCap.css" rel="stylesheet" />
        <link href="../Resources/Stylesheets/OnlineStyle.css" rel="stylesheet" />
        <script src="../SkinSupport/MadCapAll.js" type="text/javascript">
        </script>
    </head>
    <body>
        <p class="MCWebHelpFramesetLink" style="display: none;"><a href="../../index_CSH.html#client-server/reference_cache_in_client-server_mode.htm" style="">Open topic with navigation</a>
        </p>
        <div class="MCBreadcrumbsBox"><span class="MCBreadcrumbsPrefix">You are here: </span><a class="MCBreadcrumbsLink" href="../client-server.htm">Client-Server</a><span class="MCBreadcrumbsDivider"> &gt; </span><span class="MCBreadcrumbs">Reference Cache In Client-Server Mode</span>
        </div>
        <script type="text/javascript">/*<![CDATA[*/
			document.write("<a href=\"" + location.href +"\">");
			document.write("Direct Link to this Article");
			document.write('</a>');/*]]>*/</script>
        <h1>Reference Cache In Client-Server Mode</h1>
        <p>db4o uses an <a href="../basics/indentity_concept/reference_cache.htm">object reference cache</a> for easy access to persistent objects during one transaction. In
client/server mode each client has its own reference cache, which helps to
achieve good performance. However it gets complicated, when different clients
work on the same object, as this object's cached value is used on each side. It
means, that even when the operations go serially, the object's value won't be
updated serially unless it is refreshed before each update.
</p>
        <div class="codesnippet" MadCap:conditions="Primary.Java">
            <pre class="prettyprint" xml:space="preserve">Person personOnClient1 = queryForPerson(client1);
Person personOnClient2 = queryForPerson(client2);
System.out.println(queryForPerson(client2).getName());

personOnClient1.setName(<span style="color:#A31515;">"New Name"</span>);
client1.store(personOnClient1);
client1.commit();

<span style="color:Green;">// The other client still has the old data in the cache</span>
System.out.println(queryForPerson(client2).getName());

client2.ext().refresh(personOnClient2,Integer.MAX_VALUE);

<span style="color:Green;">// After refreshing the date is visible</span>
System.out.println(queryForPerson(client2).getName());</pre>
            <div class="codesnippet-meta">ReferenceCacheExamples.java: Reference cache in client server
			<div class="codedownload"><a href="../CodeExamples/clientserver/referencecache/Example-clientserver-referencecache-java.zip" class="codedownload" MadCap:conditions="Primary.Online">Download Code</a></div><div class="codedownload copylink-marker" MadCap:conditions="Primary.Online"><a href="#copy">Copy Code</a></div></div>
        </div>
        <p>There are multiple strategies to deal with this.</p>
        <ul>
            <li value="1">If you client's are not updating the same object or it very unlikely that it happens, you don't need to take any action.</li>
            <li value="2">You can refresh objects as they are updated on all clients. However this need a lot of communication between the server and client. <a href="refreshing_objects.htm" target="" title="" alt="" class="MCXref" xrefformat="See &quot;{paratext}&quot;">See "Refreshing Objects"</a></li>
            <li value="3">You can do short unit of work on the client, to minimize the chance of outdated objects. </li>
        </ul>
        <h2>Clean Cache For Work</h2>
        <p>Often you don't want to refresh object by object. Instead you want to work with a clean cache. You can do this by using a separate 'session' on the client. This container brings its own cache with it. So you can create a new container which a clean cache.</p>
        <p>Note that open session on the client doesn't create a separate transaction. Instead it only creates a fresh cache. The transaction is always the same.</p>
        <div class="codesnippet" MadCap:conditions="Primary.Java">
            <pre class="prettyprint" xml:space="preserve">ObjectContainer container = client.ext().openSession();
<span style="color:Blue;">try</span>{
    <span style="color:Green;">// do work</span>
}<span style="color:Blue;">finally</span> {
    container.close();
}
<span style="color:Green;">// Start with a fresh cache:</span>
container = client.ext().openSession();
<span style="color:Blue;">try</span>{
    <span style="color:Green;">// do work</span>
}<span style="color:Blue;">finally</span> {
    container.close();
}</pre>
            <div class="codesnippet-meta">ReferenceCacheExamples.java: Clean cache for each unit of work
			<div class="codedownload"><a href="../CodeExamples/clientserver/referencecache/Example-clientserver-referencecache-java.zip" class="codedownload" MadCap:conditions="Primary.Online">Download Code</a></div><div class="codedownload copylink-marker" MadCap:conditions="Primary.Online"><a href="#copy">Copy Code</a></div></div>
        </div>
        <script src="../Resources/Code/jquery.min.js">
        </script>
        <script src="../Resources/Code/ZeroClipboard.js">
        </script>
        <script type="text/javascript">/* <![CDATA[ */
window.onload = function(){
	var pathToFlash = $('html').attr('MadCap:PathToHelpSystem') + 'Content/Resources/Code/ZeroClipboard.swf';
	ZeroClipboard.setMoviePath(pathToFlash);
			
	function bindToClipBord(element,content){
		var clip = new ZeroClipboard.Client();
		clip.setText(content);
		clip.glue(element);
	};
		
	if(location.protocol==='file:'){
		$('.copylink-marker').remove();
	} else{
			$('.copylink-marker').each(function(){
				var text = $(this).parent().parent().children('.prettyprint').text();
				$(this).hover(function(){
					bindToClipBord(this,text);
				},
				function(){});
			});	
	}		
};
                /* ]]> */</script>
        <script type="text/javascript" src="../SkinSupport/MadCapBodyEnd.js">
        </script>
    </body>
</html>